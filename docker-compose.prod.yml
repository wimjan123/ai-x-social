# AI Social Media Platform - Production Environment
# Docker Compose override for production deployment
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

version: '3.8'

services:
  # PostgreSQL 16 - Production Overrides
  postgres:
    restart: always
    container_name: ai-x-social-db-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Production performance tuning
      POSTGRES_SHARED_BUFFERS: 1GB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 4GB
      POSTGRES_MAINTENANCE_WORK_MEM: 256MB
      POSTGRES_WORK_MEM: 16MB
      POSTGRES_WAL_BUFFERS: 16MB
      POSTGRES_MAX_CONNECTIONS: 200
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./docker/database/postgresql-prod.conf:/etc/postgresql/postgresql.conf:ro
      - postgres_backups:/backups
    ports: [] # Remove exposed ports for security
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Redis 7 - Production Overrides
  redis:
    restart: always
    container_name: ai-x-social-redis-prod
    volumes:
      - redis_prod_data:/data
      - ./docker/redis/redis-prod.conf:/usr/local/etc/redis/redis.conf:ro
    ports: [] # Remove exposed ports for security
    command: redis-server /usr/local/etc/redis/redis.conf
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Backend API - Production Overrides
  backend:
    build:
      target: production
    restart: always
    container_name: ai-x-social-backend-prod
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN}
      # AI Provider Keys
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY}
      # News API Keys
      NEWS_API_KEY: ${NEWS_API_KEY}
      GUARDIAN_API_KEY: ${GUARDIAN_API_KEY}
      GNEWS_API_KEY: ${GNEWS_API_KEY}
      # Production settings
      LOG_LEVEL: ${LOG_LEVEL:-info}
      ENABLE_API_DOCS: ${ENABLE_API_DOCS:-false}
      MAX_REQUESTS_PER_MINUTE: ${MAX_REQUESTS_PER_MINUTE:-100}
    volumes:
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    ports: [] # Remove exposed ports - handled by nginx
    healthcheck:
      interval: 30s
      timeout: 15s
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # Frontend - Production Overrides
  frontend:
    build:
      target: production
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
        NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL}
    restart: always
    container_name: ai-x-social-frontend-prod
    environment:
      NODE_ENV: production
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    volumes: [] # Remove development volumes
    ports: [] # Remove exposed ports - handled by nginx
    healthcheck:
      interval: 30s
      timeout: 15s
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # Nginx Reverse Proxy and Load Balancer
  nginx:
    image: nginx:alpine
    container_name: ai-x-social-nginx-prod
    restart: always
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Database Backup Service
  db-backup:
    image: postgres:16-alpine
    container_name: ai-x-social-db-backup
    restart: "no"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      BACKUP_SCHEDULE: ${BACKUP_SCHEDULE:-0 2 * * *}
    volumes:
      - postgres_backups:/backups
      - ./docker/scripts/backup.sh:/backup.sh:ro
    depends_on:
      - postgres
    profiles:
      - backup
    command: /backup.sh

  # Remove development tools in production
  pgadmin:
    profiles:
      - disabled

  redis-commander:
    profiles:
      - disabled

  devtools:
    profiles:
      - disabled

# Production Volumes with Backup Configuration
volumes:
  postgres_prod_data:
    driver: local
    name: ai-social-postgres-prod-data
  redis_prod_data:
    driver: local
    name: ai-social-redis-prod-data
  postgres_backups:
    driver: local
    name: ai-social-postgres-backups
  backend_logs:
    driver: local
    name: ai-social-backend-logs
  backend_uploads:
    driver: local
    name: ai-social-backend-uploads
  nginx_logs:
    driver: local
    name: ai-social-nginx-logs