version: '3.8'

# Production override for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  postgres:
    restart: always
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: [] # Remove exposed ports for security

  redis:
    restart: always
    volumes:
      - redis_prod_data:/data
    ports: [] # Remove exposed ports for security
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 1gb --maxmemory-policy allkeys-lru

  backend:
    build:
      target: production
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
      AI_CLAUDE_API_KEY: ${AI_CLAUDE_API_KEY}
      AI_OPENAI_API_KEY: ${AI_OPENAI_API_KEY}
      AI_GEMINI_API_KEY: ${AI_GEMINI_API_KEY}
      NEWS_API_KEY: ${NEWS_API_KEY}
      GUARDIAN_API_KEY: ${GUARDIAN_API_KEY}
      GNEWS_API_KEY: ${GNEWS_API_KEY}
    volumes: []
    ports:
      - "127.0.0.1:3001:3001" # Bind to localhost only
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  frontend:
    build:
      target: production
    restart: always
    environment:
      NODE_ENV: production
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    volumes: []
    ports:
      - "127.0.0.1:3000:3000" # Bind to localhost only
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: ai_social_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - ai_social_network
    depends_on:
      - frontend
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Remove development tools in production
  pgadmin:
    profiles:
      - disabled

  redis-commander:
    profiles:
      - disabled

volumes:
  postgres_prod_data:
    name: ai_social_postgres_prod_data
  redis_prod_data:
    name: ai_social_redis_prod_data