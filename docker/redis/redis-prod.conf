# Redis 7 Configuration for AI Social Media Platform
# Production Environment Configuration
# This file is mounted into the container at /usr/local/etc/redis/redis.conf

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# Network settings for production
bind 0.0.0.0
port 6379
timeout 0
tcp-keepalive 300
tcp-backlog 511

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# General settings for production
daemonize no
supervised no
pidfile /var/run/redis_6379.pid
loglevel warning
logfile ""

# Database settings
databases 16
always-show-logo no

# =============================================================================
# MEMORY CONFIGURATION
# =============================================================================

# Memory management for production (2GB limit)
maxmemory 2gb
maxmemory-policy allkeys-lru
maxmemory-samples 10

# =============================================================================
# PERSISTENCE CONFIGURATION
# =============================================================================

# RDB (Redis Database) persistence for production
save 900 1
save 300 10
save 60 10000

stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
rdb-del-sync-files no
dir /data

# AOF (Append Only File) persistence
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Security settings for production
requirepass ${REDIS_PASSWORD}

# Disable dangerous commands in production
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command EVAL ""
rename-command DEBUG ""
rename-command CONFIG ""
rename-command SHUTDOWN SHUTDOWN_REDIS_PROD_ONLY

# =============================================================================
# CLIENT CONFIGURATION
# =============================================================================

# Client settings for production load
maxclients 50000

# =============================================================================
# SLOW LOG CONFIGURATION
# =============================================================================

# Slow query log for production monitoring
slowlog-log-slower-than 5000
slowlog-max-len 1000

# =============================================================================
# LATENCY MONITORING
# =============================================================================

# Latency monitoring for production
latency-monitor-threshold 50

# =============================================================================
# EVENT NOTIFICATION
# =============================================================================

# Keyspace notifications (minimal for production)
notify-keyspace-events "Ex"

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Hash settings optimized for production
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List settings
list-max-ziplist-size -2
list-compress-depth 0

# Set settings
set-max-intset-entries 512

# Sorted set settings
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog settings
hll-sparse-max-bytes 3000

# Streams settings
stream-node-max-bytes 4096
stream-node-max-entries 100

# =============================================================================
# ACTIVE REHASHING
# =============================================================================

# Active rehashing for better memory efficiency
activerehashing yes

# =============================================================================
# CLIENT OUTPUT BUFFER LIMITS
# =============================================================================

# Client output buffer limits for production
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 1gb 256mb 60
client-output-buffer-limit pubsub 128mb 32mb 60

# =============================================================================
# CLIENT QUERY BUFFER
# =============================================================================

# Client query buffer limit
client-query-buffer-limit 1gb

# =============================================================================
# PROTOCOL SETTINGS
# =============================================================================

# Protocol settings
proto-max-bulk-len 512mb

# =============================================================================
# FREQUENCY SETTINGS
# =============================================================================

# Higher frequency for production responsiveness
hz 100

# =============================================================================
# AOF REWRITE SETTINGS
# =============================================================================

# AOF rewrite settings for production
dynamic-hz yes
aof-rewrite-incremental-fsync yes

# =============================================================================
# RDB SETTINGS
# =============================================================================

# RDB settings for production
rdb-save-incremental-fsync yes

# =============================================================================
# JEMALLOC SETTINGS
# =============================================================================

# Jemalloc background thread
jemalloc-bg-thread yes

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================

# SSL/TLS settings (uncomment if using SSL)
# port 0
# tls-port 6380
# tls-cert-file /etc/redis/ssl/redis.crt
# tls-key-file /etc/redis/ssl/redis.key
# tls-ca-cert-file /etc/redis/ssl/ca.crt
# tls-dh-params-file /etc/redis/ssl/redis.dh
# tls-protocols "TLSv1.2 TLSv1.3"
# tls-ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256"
# tls-prefer-server-ciphers yes
# tls-session-caching no
# tls-session-cache-size 5000
# tls-session-cache-timeout 60

# =============================================================================
# AI SOCIAL PLATFORM PRODUCTION CONFIGURATION
# =============================================================================

# Database allocation for production workloads:

# Database 0: User sessions and authentication
# - User login sessions
# - JWT tokens
# - Password reset tokens
# - Rate limiting counters

# Database 1: Application cache
# - API response caching
# - Database query result caching
# - Computed aggregations (follower counts, etc.)

# Database 2: Real-time features
# - WebSocket connection tracking
# - Live feed updates
# - Notification queues
# - Active user tracking

# Database 3: AI processing cache
# - AI model response caching
# - Preprocessed AI inputs
# - AI generation job queues
# - Model-specific cached data

# Database 4: News and content cache
# - News article caching
# - Trending topics cache
# - External API response caching
# - Content moderation results

# Database 5: Analytics and metrics
# - Real-time analytics counters
# - Performance metrics
# - Usage statistics
# - Temporary calculation data

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================

# Settings for production monitoring
# These can be queried by monitoring tools

# Memory usage alerting thresholds:
# - Alert at 80% maxmemory usage
# - Critical at 95% maxmemory usage

# Connection monitoring:
# - Alert when clients > 80% of maxclients
# - Alert on high number of blocked clients

# Performance monitoring:
# - Monitor slowlog for queries > 5ms
# - Track hit ratio (should be > 90%)
# - Monitor expired keys rate

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================

# Production backup strategy:
# 1. RDB snapshots every 15 minutes during peak hours
# 2. AOF for point-in-time recovery
# 3. Automated backup to external storage
# 4. Regular backup testing and restoration procedures

# =============================================================================
# HIGH AVAILABILITY
# =============================================================================

# Redis Sentinel configuration (if using Sentinel)
# This would be configured separately in sentinel.conf files:

# Sentinel configuration example:
# sentinel monitor mymaster redis-master 6379 2
# sentinel auth-pass mymaster ${REDIS_PASSWORD}
# sentinel down-after-milliseconds mymaster 5000
# sentinel parallel-syncs mymaster 1
# sentinel failover-timeout mymaster 10000

# =============================================================================
# CLUSTER CONFIGURATION
# =============================================================================

# Redis Cluster configuration (if using clustering)
# Uncomment and configure if using Redis Cluster:

# cluster-enabled yes
# cluster-config-file nodes-6379.conf
# cluster-node-timeout 15000
# cluster-announce-ip ${REDIS_CLUSTER_ANNOUNCE_IP}
# cluster-announce-port 6379
# cluster-announce-bus-port 16379

# =============================================================================
# PRODUCTION NOTES
# =============================================================================

# Production deployment checklist:
# 1. Set strong REDIS_PASSWORD
# 2. Configure SSL/TLS if needed
# 3. Set up Redis Sentinel or Cluster for HA
# 4. Configure automated backups
# 5. Set up monitoring and alerting
# 6. Tune memory settings based on actual usage
# 7. Test failover procedures
# 8. Configure log rotation
# 9. Set up network security (VPC, firewall rules)
# 10. Performance testing and optimization